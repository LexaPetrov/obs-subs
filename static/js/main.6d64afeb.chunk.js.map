{"version":3,"sources":["components/Checkbox.js","components/Main.js","reducer/reducer.js","reducer/actionType.js","reducer/actions.js","components/LinkPage.js","App.js","serviceWorker.js","index.js"],"names":["name","value","text","onChange","checked","label","style","margin","className","type","display","props","loc","window","location","origin","useState","link","params","theme","goal","videos","subs","views","transparent","lang","res","clicked","state","setState","handleChange","e","target","buttonClick","channel","Object","keys","map","p","decodeURI","includes","split","process","useEffect","href","onSubmit","event","preventDefault","placeholder","required","trim","htmlFor","onClick","id","alt","src","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","download","rel","action","data","payload","info","subscriberCount","items","statistics","videoCount","viewCount","newParams","getLinkData","dispatch","fetch","then","ok","Error","statusText","json","catch","err","console","error","pathname","length","search","useReducer","reducer","vals","newParam","undefined","push","assign","n","i","setInterval","log","background","App","path","exact","component","Main","LinkPage","Boolean","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0QAGe,G,MAAA,YAAsD,IAAnDA,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAEpD,OACI,yBAAKC,MAAO,CAAEC,OAAQ,SAClB,2BAAOC,UAAU,SACb,yBAAKA,UAAU,UACX,2BAAOA,UAAU,eAAeJ,QAASA,EAASD,SAAUA,EAAUM,KAAK,WAAWT,KAAMA,EAAMC,MAAOA,IACzG,yBAAKO,UAAU,gBACX,yBAAKA,UAAU,eAEnB,yBAAKA,UAAU,eAEnB,yBAAKA,UAAU,aACaF,MAAO,CAAEI,QAAS,SAAU,+BAAQL,GAC3DH,OCZN,WAAAS,GACX,IAAMC,EAAMC,OAAOC,SAASC,OADR,EAEMC,mBAAS,CAC/BJ,MACAK,KAAM,GACNC,OAAQ,CACJC,MAAO,IACPC,KAAM,GACNC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,YAAa,IACbC,KAAM,MAGVC,IAAK,GACLC,SAAS,EACTvB,SAAS,IAjBO,mBAEbwB,EAFa,KAENC,EAFM,KAoBpB,SAASC,EAAaC,GAClBF,EAAS,eACFD,EADC,eAEHG,EAAEC,OAAOhC,KAAO+B,EAAEC,OAAO/B,SAIlC,SAASgC,IACL,IAOIC,EAPAhB,EAAS,GACbiB,OAAOC,KAAKR,EAAMV,QAAQmB,KAAI,SAAAC,GAI1B,MAHwB,KAApBV,EAAMV,OAAOoB,KACbpB,GAAM,UAAOoB,EAAP,YAAYV,EAAMV,OAAOoB,GAAzB,MAEH,KAGQ,KAAfV,EAAMX,QACNiB,EAAUK,UAAUX,EAAMX,OACbuB,SAAS,iBAClBN,EAAU,mCAAqCA,GAEnDA,EAAUA,EAAQO,MAAM,KAAK,GAAGA,MAAM,KAAK,IAG/CZ,EAAS,eACFD,EADC,CAEJF,IAAI,GAAD,OAAKE,EAAMhB,KAAX,OAAiB8B,GAAjB,YAA2CR,EAA3C,YAAsDhB,GACzDS,SAAS,KAIjBgB,qBAAU,YACgB,IAAlBf,EAAMD,SACNM,MAEL,CAACL,EAAMV,SAsBV,IAAIO,EAAOG,EAAMV,OAAOO,KAExB,OACI,yBAAKjB,UAAU,WACX,yBAAKA,UAAU,YAEX,kBAAC,EAAD,CACIR,KAAK,OACLG,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBV,OAAO,eACAU,EAAMV,OADP,CAEFO,KAA4B,OAAtBG,EAAMV,OAAOO,KAAgB,MAAQ,WAGnDrB,QAA+B,QAAtBwB,EAAMV,OAAOO,KACtBvB,KAAK,oBACLG,MAAO,2BAAOG,UAAU,iBAInB,OAATiB,EAAgB,kRACkE,6BADlE,6QAEwC,uBAAGmB,KAAK,4CAAR,yCAChD,sHACuF,6BADvF,kDAEuC,uBAAGA,KAAK,4CAAR,yCAGnD,yBAAKpC,UAAU,kBACX,0BAAMqC,SAAU,SAACC,GAAYA,EAAMC,mBAC/B,2BAAOtC,KAAK,OAAOuC,YAAsB,OAATvB,EAAgB,kGAAyB,6BAA8BwB,UAAQ,EAAChD,MAAO2B,EAAMX,KAAMjB,KAAK,OAAOG,SAAU2B,IACzJ,yBAAKtB,UAAU,SACX,6BACI,kBAAC,EAAD,CACIR,KAAK,UACLG,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBxB,SAAUwB,EAAMxB,YAEpBA,QAASwB,EAAMxB,QACfF,KAAe,OAATuB,EAAgB,+KAAqC,iBAE/D,6BAEQG,EAAMxB,QAAU,2BACZK,KAAK,SACLR,MAAO2B,EAAMV,OAAOE,KACpBpB,KAAK,OACLgD,YAAsB,OAATvB,EAAgB,gEAAgB,oBAC7CtB,SArEpC,SAA4B4B,GACxBF,EAAS,eACFD,EADC,CAEJV,OAAO,eACAU,EAAMV,OADP,eAEDa,EAAEC,OAAOhC,KAAO+B,EAAEC,OAAO/B,MAAMiD,eAiEP,OAKjB,kBAAC,EAAD,CACI/C,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBV,OAAO,eACAU,EAAMV,OADP,CAEFI,MAAOM,EAAMV,OAAOI,WAG5BlB,QAASwB,EAAMV,OAAOI,KACtBpB,KAAe,OAATuB,EAAgB,iKAAiC,2BAE3D,kBAAC,EAAD,CACItB,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBV,OAAO,eACAU,EAAMV,OADP,CAEFG,QAASO,EAAMV,OAAOG,aAG9BjB,QAASwB,EAAMV,OAAOG,OACtBnB,KAAe,OAATuB,EAAgB,gMAAuC,+BAEjE,kBAAC,EAAD,CACItB,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBV,OAAO,eACAU,EAAMV,OADP,CAEFK,OAAQK,EAAMV,OAAOK,YAG7BnB,QAASwB,EAAMV,OAAOK,MACtBrB,KAAe,OAATuB,EAAgB,2JAAgC,sBAE1D,kBAAC,EAAD,CACIzB,KAAK,cACLG,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBV,OAAO,eACAU,EAAMV,OADP,CAEFM,YAAa,UAGrBpB,QAAsC,MAA7BwB,EAAMV,OAAOM,YACtBtB,KAAe,OAATuB,EAAgB,kFAAmB,yBACzCxB,MAAM,MAEV,kBAAC,EAAD,CACID,KAAK,cACLG,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBV,OAAO,eACAU,EAAMV,OADP,CAEFM,YAAa,UAGrBpB,QAAsC,MAA7BwB,EAAMV,OAAOM,YACtBtB,KAAe,OAATuB,EAAgB,+IAA8B,kCACpDxB,MAAM,MAEV,kBAAC,EAAD,CACID,KAAK,cACLG,SAAU,kBAAM0B,EAAS,eAClBD,EADiB,CAEpBV,OAAO,eACAU,EAAMV,OADP,CAEFM,YAAa,UAGrBpB,QAAsC,MAA7BwB,EAAMV,OAAOM,YACtBtB,KAAe,OAATuB,EAAgB,mIAA4B,kCAClDxB,MAAM,OAKD,OAATwB,EAAgB,yMAA8C,iEAGlE,yBAAKjB,UAAU,UACX,yBAAKA,UAAU,aACX,2BAAO2C,QAAQ,SAAS3C,UAAU,aAC9B,2BAAO4C,QAAS,WACZvB,EAAS,eACFD,EADC,CAEJV,OAAO,eACAU,EAAMV,OADP,CAEFC,MAAO,UAGhBV,KAAK,QAAQT,KAAK,QAAQqD,GAAG,SAASpD,MAAM,MAC/C,yBAAKqD,IAAI,GAAGC,IAAc,OAAT9B,EAAgB,aAAe,mBAChD,0BAAMjB,UAAU,gBAGxB,yBAAKA,UAAU,aACX,2BAAO2C,QAAQ,SAAS3C,UAAU,aAC9B,2BAAO4C,QAAS,WACZvB,EAAS,eACFD,EADC,CAEJV,OAAO,eACAU,EAAMV,OADP,CAEFC,MAAO,UAGhBV,KAAK,QAAQ4C,GAAG,SAASrD,KAAK,QAAQC,MAAM,MAC/C,yBAAKqD,IAAI,GAAGC,IAAc,OAAT9B,EAAgB,aAAe,mBAChD,0BAAMjB,UAAU,gBAGxB,yBAAKA,UAAU,aACX,2BAAO2C,QAAQ,SAAS3C,UAAU,aAC9B,2BAAO4C,QAAS,WACZvB,EAAS,eACFD,EADC,CAEJV,OAAO,eACAU,EAAMV,OADP,CAEFC,MAAO,UAGhBV,KAAK,QAAQT,KAAK,QAAQqD,GAAG,SAASpD,MAAM,MAC/C,yBAAKqD,IAAI,GAAGC,IAAc,OAAT9B,EAAgB,aAAe,mBAChD,0BAAMjB,UAAU,iBAK5B,4BAAQC,KAAK,SAASD,UAAU,KAAK4C,QAASnB,GAChC,OAATR,EAAgB,sGAA6B,0BAElD,6BAEQG,EAAMD,SAA0B,KAAfC,EAAMX,KAAc,2BACjCR,KAAK,OACLR,MAAO2B,EAAMF,IACb1B,KAAK,MACLG,SAAU2B,IACT,KAGLF,EAAMD,SAA0B,KAAfC,EAAMX,KAAc,4BAAQT,UAAU,KAAK4C,QA5MpF,WACI,IAAMI,EAAYC,SAASC,cAAc,YACzCF,EAAUG,UAAY/B,EAAMF,IAC5B+B,SAASG,KAAKC,YAAYL,GAC1BA,EAAUM,SACVL,SAASM,YAAY,QACrBP,EAAUQ,WAsM0G,OAATvC,EAAgB,gJAA+B,0BAAqC,KAG3KG,EAAMD,SAA0B,KAAfC,EAAMX,KACnB,4BAAc,OAATQ,EAAgB,sMAAkD,yCAAgD,QAM3I,yBAAKjB,UAAU,aAEX,uBAAGA,UAAU,2CAA2CyD,UAAQ,EAACrB,KAAK,mGAA4G,OAATnB,EAAgB,qIAAmC,oCAC5N,uBAAGjB,UAAU,yCAAyCyD,UAAQ,EAACrB,KAAK,qFAA8F,OAATnB,EAAgB,mIAAiC,kCAC1M,uBAAGjB,UAAU,yCAAyCyD,UAAQ,EAACrB,KAAK,2FAAoG,OAATnB,EAAgB,mIAAiC,mCAEpN,gCACI,6BACI,4CAAwB,2BAAOjB,UAAU,mBAAyB,qCAAU,uBAAGwB,OAAO,SAASkC,IAAI,sBAAsBZ,IAAI,GAAGV,KAAK,+BAAzD,eAEhF,6BACI,uBAAGA,KAAK,2CAAR,yB,QCrSL,aAAyB,IAAxBhB,EAAuB,uDAAf,GAAIuC,EAAW,uCACnC,OAAQA,EAAO1D,MACX,ICPuB,kBDOvB,IACS2D,EAAQD,EAAOE,QAAfD,KACL,OAAO,eACAxC,EADP,CAEI0C,KAAM,CACFC,gBAAiBH,EAAKI,MAAM,GAAGC,WAAWF,gBAC1CG,WAAYN,EAAKI,MAAM,GAAGC,WAAWC,WACrCC,UAAWP,EAAKI,MAAM,GAAGC,WAAWE,WAExCzD,OAAQiD,EAAOE,QAAQO,YAE/B,QACI,OAAOhD,IEfNiD,EAAc,SAAC5D,EAAM6D,EAAU5D,GACxC6D,MAAM,qEAAD,OAAsE9D,EAAtE,iDACA+D,MAAK,SAAAtD,GACF,IAAKA,EAAIuD,GAAI,MAAMC,MAAMxD,EAAIyD,YAC7B,OAAOzD,EAAI0D,UAEdJ,MAAK,SAACtD,GACHoD,EAAS,CAAErE,KDXQ,kBCWe4D,QAAS,CAACD,KAAM1C,EAAKkD,UAAW1D,QACnEmE,OAAM,SAAAC,GAASC,QAAQC,MAAMF,OCPzB,WAAA3E,GACX,IAAMM,EAAOJ,OAAOC,SAAS2E,SAAShD,MAAM,KAAK5B,OAAOC,SAAS2E,SAAShD,MAAM,KAAKiD,OAAS,GACxFxE,EAASL,OAAOC,SAAS6E,OAAOlD,MAAM,KAE5CvB,EAAO,GAAKA,EAAO,GAAGuB,MAAM,KAAK,GAJb,MAMMmD,qBAAWC,EAAS,CAC1C5E,OACAqD,KAAM,CACFC,gBAAiB,GACjBG,WAAY,GACZC,UAAW,IAEfzD,OAAQ,CACJC,MAAO,GACPC,KAAM,GACNC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,YAAa,IACbC,KAAM,QApBM,mBAMbG,EANa,KAMNkD,EANM,KAyBhB1C,EAAO,GACP0D,EAAO,GAEX5E,EAAOmB,KAAI,SAAAC,GACP,IAAIyD,EAAYzD,EAAEG,MAAM,KAKxB,MAJoB,KAAhBsD,EAAS,SAA6BC,IAAhBD,EAAS,KAC/B3D,EAAK6D,KAAKF,EAAS,IACnBD,EAAKG,KAAKF,EAAS,KAEhB,KAGX,IAAInB,EAAYzC,OAAO+D,OAAP,MAAA/D,OAAM,YAAWC,EAAKC,KAAI,SAAC8D,EAAGC,GAAJ,sBAAcD,EAAIL,EAAKM,SAEjEzD,qBAAU,WACNkC,EAAYjD,EAAMX,KAAM6D,EAAUF,GAClCyB,aAAY,WACRxB,EAAYjD,EAAMX,KAAM6D,EAAUF,KACnC,OACJ,IAUH,OAFAW,QAAQe,IAAI1E,GAGR,yBAAKpB,UAAU,eAAeF,MATnB,CACX,CAAEiG,WAAY,iBACd,CAAEA,WAAY,sBACd,CAAEA,WAAY,sBAM+B3E,EAAMV,OAAOM,YAAc,IACpE,yBAAKhB,UAAS,oBAAeoB,EAAMV,OAAOC,QAEZ,SAAtBS,EAAMV,OAAOI,KACe,KAAtBM,EAAMV,OAAOE,WAAqC4E,IAAtBpE,EAAMV,OAAOE,KACvC,+BAC2B,OAAtBQ,EAAMV,OAAOO,KAAgB,uEAAkB,aAAcG,EAAM0C,KAAKC,gBAD7E,QACmG3C,EAAMV,OAAOE,MACrG,+BAA8B,OAAtBQ,EAAMV,OAAOO,KAAgB,uEAAkB,gBAAvD,IAAyEG,EAAM0C,KAAKC,gBAApF,KACb,KAGkB,SAAxB3C,EAAMV,OAAOG,OAAoB,mCAA+B,OAAtBO,EAAMV,OAAOO,KAAgB,0FAAsB,kBAA5D,IAAgFG,EAAM0C,KAAKI,WAA3F,KAAkH,KAG5H,SAAvB9C,EAAMV,OAAOK,MAAmB,+BAA8B,OAAtBK,EAAMV,OAAOO,KAAgB,gGAAuB,iBAA5D,KAAgFG,EAAM0C,KAAKK,UAA3F,KAAiH,MAGzJ,yBAAKnE,UAAS,oBAAeoB,EAAMV,OAAOC,MAA5B,UAA0C,+BArErD,0BCQAqF,MAVf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAA+B,IAAKC,OAAK,EAACC,UAAWC,IAC5D,kBAAC,IAAD,CAAOH,KAA+B,QAASE,UAAWC,IAC1D,kBAAC,IAAD,CAAOH,KAA+B,SAAUE,UAAWE,MCC7CC,QACW,cAA7BjG,OAAOC,SAASiG,UAEe,UAA7BlG,OAAOC,SAASiG,UAEhBlG,OAAOC,SAASiG,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAUzE,IACvB,kBAAC,EAAD,OACgBe,SAAS2D,eAAe,SDwHtC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEdpC,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAMkC,c","file":"static/js/main.6d64afeb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Checkbox.css'\r\n\r\nexport default ({ name, value, text, onChange, checked, label }) => {\r\n\r\n    return (\r\n        <div style={{ margin: '20px' }}>\r\n            <label className=\"label\">\r\n                <div className=\"toggle\">\r\n                    <input className=\"toggle-state\" checked={checked} onChange={onChange} type=\"checkbox\" name={name} value={value} />\r\n                    <div className=\"toggle-inner\">\r\n                        <div className=\"indicator\"></div>\r\n                    </div>\r\n                    <div className=\"active-bg\"></div>\r\n                </div>\r\n                <div className=\"label-text\"\r\n               /*Только для иконки флага */ style={{ display: 'flex' }}><label>{label}</label>\r\n                    {text}\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Checkbox from './Checkbox'\r\n\r\nimport '../index.css'\r\n\r\nexport default props => {\r\n    const loc = window.location.origin\r\n    const [state, setState] = useState({\r\n        loc,\r\n        link: '',\r\n        params: {\r\n            theme: '1',\r\n            goal: '',\r\n            videos: false,\r\n            subs: true,\r\n            views: false,\r\n            transparent: '1',\r\n            lang: 'ru'\r\n\r\n        },\r\n        res: '',\r\n        clicked: false,\r\n        checked: false\r\n    })\r\n\r\n    function handleChange(e) {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    function buttonClick() {\r\n        let params = ''\r\n        Object.keys(state.params).map(p => {\r\n            if (state.params[p] !== '') {\r\n                params += `${p}=${state.params[p]}&`\r\n            }\r\n            return 0\r\n        })\r\n        let channel\r\n        if (state.link !== '') {\r\n            channel = decodeURI(state.link)\r\n            if (!channel.includes('youtube.com')) {\r\n                channel = 'https://www.youtube.com/channel/' + channel\r\n            }\r\n            channel = channel.split('/')[4].split('?')[0]\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            res: `${state.loc}${process.env.PUBLIC_URL}/${channel}?${params}`,\r\n            clicked: true\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (state.clicked === true) {\r\n            buttonClick()\r\n        }\r\n    }, [state.params]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    function handleParamsChange(e) {\r\n        setState({\r\n            ...state,\r\n            params: {\r\n                ...state.params,\r\n                [e.target.name]: e.target.value.trim()\r\n            }\r\n        })\r\n    }\r\n\r\n    function copyToClipBoard() {\r\n        const textField = document.createElement('textarea');\r\n        textField.innerText = state.res;\r\n        document.body.appendChild(textField);\r\n        textField.select();\r\n        document.execCommand('copy');\r\n        textField.remove();\r\n    }\r\n\r\n    let lang = state.params.lang\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <div className=\"language\">\r\n\r\n                <Checkbox\r\n                    name='lang'\r\n                    onChange={() => setState({\r\n                        ...state,\r\n                        params: {\r\n                            ...state.params,\r\n                            lang: state.params.lang === 'ru' ? 'eng' : 'ru'\r\n                        }\r\n                    })}\r\n                    checked={state.params.lang === 'eng'}\r\n                    text='switch to english'\r\n                    label={<label className='flag_icon'></label>}\r\n                />\r\n            </div>\r\n            {\r\n                lang === 'ru' ? <h2>\r\n                    1. Вставь ссылку на канал в формате https://www.youtube.com/channel/ID_канала <br />\r\n                Или вставь ID канала, узнать его можешь по этой ссылке: <a href='https://www.youtube.com/account_advanced'>https://youtube.com/account_advanced</a>\r\n                </h2> : <h2>\r\n                        1. Paste the link to your channel in format https://www.youtube.com/channel/channel_ID <br />\r\n                Or paste channel ID, you can find out it here: <a href='https://www.youtube.com/account_advanced'>https://youtube.com/account_advanced</a>\r\n                    </h2>\r\n            }\r\n            <div className='inputContainer'>\r\n                <form onSubmit={(event) => { event.preventDefault() }}>\r\n                    <input type='text' placeholder={lang === 'ru' ? 'Ссылка или ID канала' : 'Channel link or channel ID'} required value={state.link} name='link' onChange={handleChange} />\r\n                    <div className='tools'>\r\n                        <div>\r\n                            <Checkbox\r\n                                name='checked'\r\n                                onChange={() => setState({\r\n                                    ...state,\r\n                                    checked: !state.checked\r\n                                })}\r\n                                checked={state.checked}\r\n                                text={lang === 'ru' ? 'Добавить цель кол-ва подписчиков' : 'Add sub goal'}\r\n                            />\r\n                            <div>\r\n                                {\r\n                                    state.checked ? <input\r\n                                        type='number'\r\n                                        value={state.params.goal}\r\n                                        name='goal'\r\n                                        placeholder={lang === 'ru' ? 'Введи число' : 'Enter goal number'}\r\n                                        onChange={handleParamsChange}\r\n                                    /> : null\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                        <Checkbox\r\n                            onChange={() => setState({\r\n                                ...state,\r\n                                params: {\r\n                                    ...state.params,\r\n                                    subs: !state.params.subs\r\n                                }\r\n                            })}\r\n                            checked={state.params.subs}\r\n                            text={lang === 'ru' ? 'Показывать число подписчиков' : 'Show subscribers count'}\r\n                        />\r\n                        <Checkbox\r\n                            onChange={() => setState({\r\n                                ...state,\r\n                                params: {\r\n                                    ...state.params,\r\n                                    videos: !state.params.videos\r\n                                }\r\n                            })}\r\n                            checked={state.params.videos}\r\n                            text={lang === 'ru' ? 'Показывать число загруженных видео' : 'Show uploaded videos count'}\r\n                        />\r\n                        <Checkbox\r\n                            onChange={() => setState({\r\n                                ...state,\r\n                                params: {\r\n                                    ...state.params,\r\n                                    views: !state.params.views\r\n                                }\r\n                            })}\r\n                            checked={state.params.views}\r\n                            text={lang === 'ru' ? 'Показывать число просмотров' : 'Show views amount'}\r\n                        />\r\n                        <Checkbox\r\n                            name='transparent'\r\n                            onChange={() => setState({\r\n                                ...state,\r\n                                params: {\r\n                                    ...state.params,\r\n                                    transparent: '1'\r\n                                }\r\n                            })}\r\n                            checked={state.params.transparent === '1'}\r\n                            text={lang === 'ru' ? 'Прозрачный фон' : 'Transparent background'}\r\n                            value='1'\r\n                        />\r\n                        <Checkbox\r\n                            name='transparent'\r\n                            onChange={() => setState({\r\n                                ...state,\r\n                                params: {\r\n                                    ...state.params,\r\n                                    transparent: '2'\r\n                                }\r\n                            })}\r\n                            checked={state.params.transparent === '2'}\r\n                            text={lang === 'ru' ? 'Полупрозрачный тёмный фон' : '50% Transparent dark background'}\r\n                            value='2'\r\n                        />\r\n                        <Checkbox\r\n                            name='transparent'\r\n                            onChange={() => setState({\r\n                                ...state,\r\n                                params: {\r\n                                    ...state.params,\r\n                                    transparent: '3'\r\n                                }\r\n                            })}\r\n                            checked={state.params.transparent === '3'}\r\n                            text={lang === 'ru' ? 'Тёмный непрозрачный фон' : 'Non-transparent dark background'}\r\n                            value='3'\r\n                        />\r\n\r\n                    </div>\r\n                    {\r\n                        lang === 'ru' ? <h2>2. Выбери тему для своего счётчика</h2> : <h2>2. Choose a theme for the counter</h2>\r\n                    }\r\n\r\n                    <div className='themes'>\r\n                        <div className='themeItem'>\r\n                            <label htmlFor='theme1' className=\"container\">\r\n                                <input onClick={() => {\r\n                                    setState({\r\n                                        ...state,\r\n                                        params: {\r\n                                            ...state.params,\r\n                                            theme: '1'\r\n                                        }\r\n                                    })\r\n                                }} type=\"radio\" name=\"theme\" id='theme1' value=\"1\" />\r\n                                <img alt='' src={lang === 'ru' ? 'theme1.png' : 'theme1_eng.png'} />\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </div>\r\n                        <div className='themeItem'>\r\n                            <label htmlFor='theme2' className=\"container\">\r\n                                <input onClick={() => {\r\n                                    setState({\r\n                                        ...state,\r\n                                        params: {\r\n                                            ...state.params,\r\n                                            theme: '2'\r\n                                        }\r\n                                    })\r\n                                }} type=\"radio\" id='theme2' name=\"theme\" value=\"2\" />\r\n                                <img alt='' src={lang === 'ru' ? 'theme2.png' : 'theme2_eng.png'} />\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </div>\r\n                        <div className='themeItem'>\r\n                            <label htmlFor='theme3' className=\"container\">\r\n                                <input onClick={() => {\r\n                                    setState({\r\n                                        ...state,\r\n                                        params: {\r\n                                            ...state.params,\r\n                                            theme: '3'\r\n                                        }\r\n                                    })\r\n                                }} type=\"radio\" name=\"theme\" id='theme3' value=\"3\" />\r\n                                <img alt='' src={lang === 'ru' ? 'theme3.png' : 'theme3_eng.png'} />\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type='submit' className='go' onClick={buttonClick}>\r\n                        {lang === 'ru' ? '3. Получи ссылку для OBS' : '3. Get the link to OBS'}\r\n                    </button>\r\n                    <div>\r\n                        {\r\n                            state.clicked && state.link !== '' ? <input\r\n                                type='text'\r\n                                value={state.res}\r\n                                name='res'\r\n                                onChange={handleChange}\r\n                            /> : null\r\n                        }\r\n                        {\r\n                            state.clicked && state.link !== '' ? <button className='go' onClick={copyToClipBoard}>{lang === 'ru' ? 'Скопировать в буфер обмена' : 'Copy link to clipboard'}</button> : null\r\n                        }\r\n                        {\r\n                            state.clicked && state.link !== '' ?\r\n                                <h2>{lang === 'ru' ? '4. Вставь полученную ссылку в CLR браузер OBS' : '4. Paste result link into CLR browser'}</h2> : null\r\n                        }\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            <div className='downloads'>\r\n                \r\n                <a className='downloads__link downloads__link__windows' download href='https://github.com/LexaPetrov/obs-subs/releases/download/1.0.0/windows-obs-subs.Setup.1.0.0.zip'>{lang === 'ru' ? 'Скачать приложение для Windows' : 'Download desktop app for Windows'}</a>\r\n                <a className='downloads__link downloads__link__macos' download href='https://github.com/LexaPetrov/obs-subs/releases/download/1.0.0/macos-obs-subs.zip'>{lang === 'ru' ? 'Скачать приложение для MacOS' : 'Download desktop app for MacOS'}</a>\r\n                <a className='downloads__link downloads__link__linux' download href='https://github.com/LexaPetrov/obs-subs/releases/download/1.0.0/linux-obs-subs-1.0.0.zip'>{lang === 'ru' ? 'Скачать приложение для Linux' : 'Download desktop app for Linux'}</a>\r\n            </div>\r\n            <footer>\r\n                <div>\r\n                    <label>made with</label><label className='footer__label1'></label><label>by <a target='_blank' rel=\"noopener noreferrer\" alt='' href='http://lexapetrov.github.io'>petrovdev</a></label>\r\n                </div>\r\n                <div>\r\n                    <a href='https://github.com/lexapetrov/obs-subs/'>github repository</a>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}","import {\r\n    FETCH_LINK_DATA\r\n} from './actionType'\r\n\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_LINK_DATA:\r\n            let {data} = action.payload\r\n            return { \r\n                ...state, \r\n                info: {\r\n                    subscriberCount: data.items[0].statistics.subscriberCount,\r\n                    videoCount: data.items[0].statistics.videoCount,\r\n                    viewCount: data.items[0].statistics.viewCount\r\n                },\r\n                params: action.payload.newParams, \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n} ","export const FETCH_LINK_DATA = 'FETCH_LINK_DATA'","import {\r\n    FETCH_LINK_DATA\r\n} from './actionType'\r\n\r\nexport const getLinkData = (link, dispatch, params) => {\r\n    fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${link}&key=AIzaSyDnICHbhs5jRfs_pxfWq26ZR9j32iZwedU`)\r\n        .then(res => {\r\n            if (!res.ok) throw Error(res.statusText);\r\n            return res.json()\r\n        })\r\n        .then((res) => {\r\n            dispatch({ type: FETCH_LINK_DATA, payload: {data: res, newParams: params} })\r\n        }).catch(err => { console.error(err) })\r\n}","import React, { useEffect, useReducer } from 'react';\r\nimport '../index.css'\r\nimport reducer from '../reducer/reducer';\r\nimport { getLinkData } from '../reducer/actions';\r\n\r\nexport default props => {\r\n    const link = window.location.pathname.split('/')[window.location.pathname.split('/').length - 1]\r\n    const params = window.location.search.split('&')\r\n    let sign = 'https://subsobs.xyz'\r\n    params[0] = params[0].split('?')[1]\r\n\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        link,\r\n        info: {\r\n            subscriberCount: '',\r\n            videoCount: '',\r\n            viewCount: ''\r\n        },\r\n        params: {\r\n            theme: '',\r\n            goal: '',\r\n            videos: false,\r\n            subs: false,\r\n            views: false,\r\n            transparent: '1',\r\n            lang: 'ru'\r\n        }\r\n    })\r\n\r\n\r\n    let keys = []\r\n    let vals = []\r\n\r\n    params.map(p => {\r\n        let newParam = (p.split('='))\r\n        if (newParam[0] !== '' || newParam[1] !== undefined) {\r\n            keys.push(newParam[0])\r\n            vals.push(newParam[1])\r\n        }\r\n        return 0\r\n    })\r\n\r\n    let newParams = Object.assign(...keys.map((n, i) => ({ [n]: vals[i] })))\r\n\r\n    useEffect(() => {\r\n        getLinkData(state.link, dispatch, newParams)\r\n        setInterval(() => {\r\n            getLinkData(state.link, dispatch, newParams)\r\n        }, 600000)\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const styles = [\r\n        { background: 'rgba(0,0,0,0)' },\r\n        { background: 'rgba(57,57,57,0.5)' },\r\n        { background: 'rgba(57,57,57,1)' }\r\n    ]\r\n\r\n    console.log(state);\r\n    \r\n    return (\r\n        <div className='wrapper pt26' style={styles[+state.params.transparent - 1]}>\r\n            <div className={`link_theme${state.params.theme}`}>\r\n                {\r\n                    state.params.subs === 'true'\r\n                        ? state.params.goal !== '' && state.params.goal !== undefined ?\r\n                            <label>\r\n                                {state.params.lang === 'ru' ? 'Подписчиков: ' : 'Sub goal: '}{state.info.subscriberCount}  /  {state.params.goal}\r\n                            </label> : <label>{state.params.lang === 'ru' ? 'Подписчиков: ' : 'Subscribers: '} {state.info.subscriberCount} </label>\r\n                        : null\r\n                }\r\n                {\r\n                    state.params.videos === 'true' ? <label> {state.params.lang === 'ru' ? 'Загружено видео: ' : 'Videos amount: '} {state.info.videoCount} </label> : null\r\n                }\r\n                {\r\n                    state.params.views === 'true' ? <label>{state.params.lang === 'ru' ? 'Просмотров всего: ' : 'Views amount: '}  {state.info.viewCount} </label> : null\r\n                }\r\n            </div>\r\n            <div className={`link_theme${state.params.theme} sign`}><label>{sign}</label></div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './index.css'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Main from './components/Main'\r\nimport LinkPage from './components/LinkPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path={process.env.PUBLIC_URL + '/'} exact component={Main} />\r\n      <Route path={process.env.PUBLIC_URL + '/main'} component={Main} />\r\n      <Route path={process.env.PUBLIC_URL + '/:link'} component={LinkPage} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n// \"homepage\": \"http://lexapetrov.github.io/obs-subs\",\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>, document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}